version: "3.5"

services:
  proxy:
    build: nginx/
    container_name: "dind-proxy"
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      - portainer
    networks:
      - local
    volumes:
      - shared-nginx:/etc/nginx/conf.d
    environment:
      - VIRTUAL_HOST=proxy.local

  dockergen:
    image: jwilder/docker-gen
    command: -notify-sighup dind-proxy -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/dockergen.conf
    depends_on:
      - proxy
    networks:
      - local
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
      - shared-nginx:/etc/nginx/conf.d

  # whoami:
  #   image: jwilder/whoami
  #   networks:
  #     - local
  #   environment:
  #     - VIRTUAL_HOST=whoami.local

  templates:
    image: portainer/templates
    container_name: "portainer-templates"
    networks:
      - local

  portainer:
    image: portainer/portainer:1.18.0
    container_name: "portainer-app"
    command: --templates http://templates/templates.json -H unix:///var/run/docker.sock
    networks:
      - local
    depends_on:
      - templates
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/portainer/data:/data

  server:
    container_name: docker-auto-network
    build: ./server
    privileged: true
    restart: unless-stopped
    networks:
      - local
    expose:
      - "80"
      - "2375"
      - "2376"
    depends_on:
      - dind-with-compose
    volumes:
      - ./www:/www
      - /var/lib/docker:/var/lib/docker
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WWW_PATH=/www

  dind-with-compose:
    container_name: dind-with-compose
    image: cheshirecode/dind-with-compose
    build: ./dind-with-compose
    command: echo it works
    networks:
      - local

networks:
  local:
    driver: bridge
  # local1:
  #   driver: bridge
volumes:
  shared-nginx: